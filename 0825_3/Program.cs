namespace _0825_3
{
    // 경계 검출
    // 이미지의 밝기가 급격하게 변하는 지점
    // 물체의 윤곽선
    // 텍스처의 경계
    // 그림자와 밝은 부분의 경계

    // Edge 검출이 왜 중요한가
    // 물체 인식 : 물체의 모양 파악 가능
    // 전처리 작업 : 더 복잡한 분석의 첫 단계
    // 데이터 압축 : 중요한 정보만 추출
    // 패턴 인식 : 특정 모양이나 구조를 찾을 때 사용

    // sobel edge detection (소벨 미분 방식)
    // 원리 : 미분 개념 사용
    // 이미지를 수학적 함수로 보고 급격한 변화 지점을 찾음
    // x방향, y방향 각각의 변화량 계산
    // 장점 : 구현이 간단하고 속도가 빠름
    // 단점 : 노이즈에 민감하고 두꺼운 경계선이 생김

    // scharr edge detection (샤를 필터)
    // 원리 : sobel 개선 버전
    // 더 정확한 미분 계산을 위해 계수 조정
    // 장점 : 소벨보다 정확한 결과
    // 단점 : 계산량이 약간 많음

    // laplacian edge detection (라플라시안)
    // 원리 : 이차 미분 사용
    // 모든 방향의 변화를 동시에 감지
    // 하나의 커널로 모든 방향 처리
    // 장점 : 모든 방향 경계 검출
    // 단점 : 노이즈에 매우 민감

    // canny edge detection
    // 원리 (5단계)
    // ① 노이즈 제거 : 가우시안 블러 적용
    // ② 기울기 계산 : 소벨 필터 사용
    // ③ 비최대 억제 : 경계선을 얇게 만듦
    // ④ 이중 임계값 : 강한 경계와 약한 경계 구분
    // ⑤ 연결성 분석 : 약한 경계 중 강한 경계와 연결된 것만 유지
    // 장점 : 가장 정확한 결과, 얇은 경계선
    // 단점 : 복잡한 과정, 매개변수 조정 필요

    internal class Program
    {
        static void Main(string[] args)
        {
            EdgeDetection.EdgeDetectionDemo();
        }
    }
}
